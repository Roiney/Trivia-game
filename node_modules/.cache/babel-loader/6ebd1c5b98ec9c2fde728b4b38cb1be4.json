{"ast":null,"code":"var _jsxFileName = \"/home/roiney/work/trybe-projetos/sd-021-a-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\n\nclass Feedback extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.requestLoginPage = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/');\n    };\n\n    this.requestRankingPage = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/ranking');\n    };\n  }\n\n  render() {\n    const {\n      score,\n      assertions\n    } = this.props;\n    console.log(assertions);\n    const answerThreshold = 3;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, assertions < answerThreshold ? 'Could be better...' : 'Well Done!'), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"Total score: \"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, score), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Total assertions: \"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, assertions), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      onClick: () => this.requestLoginPage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Play Again\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      onClick: () => this.requestRankingPage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Ranking\"));\n  }\n\n}\n\nFeedback.propTypes = {\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = state => ({\n  score: state.player.score,\n  assertions: state.player.assertions\n});\n\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"sources":["/home/roiney/work/trybe-projetos/sd-021-a-project-trivia-react-redux/src/pages/Feedback.js"],"names":["React","connect","PropTypes","Header","Feedback","Component","requestLoginPage","history","props","push","requestRankingPage","render","score","assertions","console","log","answerThreshold","propTypes","number","isRequired","shape","func","mapStateToProps","state","player"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SACrCC,gBADqC,GAClB,MAAM;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACD,KAJoC;;AAAA,SAMrCC,kBANqC,GAMhB,MAAM;AACzB,YAAM;AAAEH,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,UAAb;AACD,KAToC;AAAA;;AAWrCE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAwB,KAAKL,KAAnC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,UAAMG,eAAe,GAAG,CAAxB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIH,UAAU,GAAGG,eAAb,GAA+B,oBAA/B,GAAsD,YAD1D,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,eAME;AAAM,qBAAY,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CJ,KAA3C,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF,eAQE;AAAM,qBAAY,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CC,UAA9C,CARF,eASE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,gBAFd;AAGE,MAAA,OAAO,EAAG,MAAM,KAAKP,gBAAL,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAgBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,aAFd;AAGE,MAAA,OAAO,EAAG,MAAM,KAAKI,kBAAL,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAhBF,CADF;AA0BD;;AAzCoC;;AA4CvCN,QAAQ,CAACa,SAAT,GAAqB;AACnBL,EAAAA,KAAK,EAAEV,SAAS,CAACgB,MAAV,CAAiBC,UADL;AAEnBN,EAAAA,UAAU,EAAEX,SAAS,CAACgB,MAAV,CAAiBC,UAFV;AAGnBZ,EAAAA,OAAO,EAAEL,SAAS,CAACkB,KAAV,CAAgB;AACvBX,IAAAA,IAAI,EAAEP,SAAS,CAACmB,IAAV,CAAeF;AADE,GAAhB,EAENA;AALgB,CAArB;;AAQA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,KAAK,EAAEW,KAAK,CAACC,MAAN,CAAaZ,KADc;AAElCC,EAAAA,UAAU,EAAEU,KAAK,CAACC,MAAN,CAAaX;AAFS,CAAZ,CAAxB;;AAKA,eAAeZ,OAAO,CAACqB,eAAD,CAAP,CAAyBlB,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\n\nclass Feedback extends React.Component {\n  requestLoginPage = () => {\n    const { history } = this.props;\n    history.push('/');\n  };\n\n  requestRankingPage = () => {\n    const { history } = this.props;\n    history.push('/ranking');\n  }\n\n  render() {\n    const { score, assertions } = this.props;\n    console.log(assertions);\n    const answerThreshold = 3;\n    return (\n      <main>\n        <Header />\n        <h3 data-testid=\"feedback-text\">\n          { assertions < answerThreshold ? 'Could be better...' : 'Well Done!' }\n        </h3>\n        <span>Total score: </span>\n        <span data-testid=\"feedback-total-score\">{ score }</span>\n        <span>Total assertions: </span>\n        <span data-testid=\"feedback-total-question\">{ assertions }</span>\n        <button\n          type=\"button\"\n          data-testid=\"btn-play-again\"\n          onClick={ () => this.requestLoginPage() }\n        >\n          Play Again\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"btn-ranking\"\n          onClick={ () => this.requestRankingPage() }\n        >\n          Ranking\n        </button>\n      </main>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  score: state.player.score,\n  assertions: state.player.assertions,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/roiney/work/trybe-projetos/sd-021-a-project-trivia-react-redux/src/pages/Ranking.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { resetAction } from '../redux/actions';\n\nclass Ranking extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.sairDoJogo = () => {\n      const {\n        history,\n        resetGame\n      } = this.props;\n      resetGame();\n      history.push('/');\n    };\n\n    this.getRanking = () => {\n      const ranking = JSON.parse(localStorage.getItem('ranking'));\n      return ranking || [];\n    };\n\n    this.sortedRanking = () => {\n      const ranking = this.getRanking();\n      ranking.sort((a, b) => b.score - a.score);\n      return ranking;\n    };\n  }\n\n  render() {\n    const ranking = this.sortedRanking();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"ranking-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, \"Ranking\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-go-home\",\n      onClick: () => this.sairDoJogo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, \"Sair do Jogo\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, ranking.map((player, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: player.picture,\n      alt: player.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": `player-name-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, player.name), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": `player-score-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, player.score))))));\n  }\n\n}\n\nRanking.propTypes = {\n  resetGame: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  resetGame: () => dispatch(resetAction())\n});\n\nexport default connect(null, mapDispatchToProps)(Ranking);","map":{"version":3,"sources":["/home/roiney/work/trybe-projetos/sd-021-a-project-trivia-react-redux/src/pages/Ranking.js"],"names":["React","PropTypes","connect","resetAction","Ranking","Component","sairDoJogo","history","resetGame","props","push","getRanking","ranking","JSON","parse","localStorage","getItem","sortedRanking","sort","a","b","score","render","map","player","index","picture","name","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SACpCC,UADoC,GACvB,MAAM;AACjB,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAyB,KAAKC,KAApC;AACAD,MAAAA,SAAS;AACTD,MAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AACD,KALmC;;AAAA,SAOpCC,UAPoC,GAOvB,MAAM;AACjB,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAhB;AACA,aAAOJ,OAAO,IAAI,EAAlB;AACD,KAVmC;;AAAA,SAYpCK,aAZoC,GAYpB,MAAM;AACpB,YAAML,OAAO,GAAG,KAAKD,UAAL,EAAhB;AACAC,MAAAA,OAAO,CAACM,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAnC;AACA,aAAOT,OAAP;AACD,KAhBmC;AAAA;;AAkBpCU,EAAAA,MAAM,GAAG;AACP,UAAMV,OAAO,GAAG,KAAKK,aAAL,EAAhB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,aAFd;AAGE,MAAA,OAAO,EAAG,MAAM,KAAKX,UAAL,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIM,OAAO,CAACW,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACZ;AAAI,MAAA,GAAG,EAAGA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAGD,MAAM,CAACE,OAAlB;AAA4B,MAAA,GAAG,EAAGF,MAAM,CAACG,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAM,qBAAe,eAAcF,KAAM,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,MAAM,CAACG,IADX,CAFF,eAKE;AAAM,qBAAe,gBAAeF,KAAM,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,MAAM,CAACH,KADX,CALF,CADA,CADJ,CADF,CAXF,CADF;AA6BD;;AAlDmC;;AAqDtCjB,OAAO,CAACwB,SAAR,GAAoB;AAClBpB,EAAAA,SAAS,EAAEP,SAAS,CAAC4B,IAAV,CAAeC,UADR;AAElBvB,EAAAA,OAAO,EAAEN,SAAS,CAAC8B,KAAV,CAAgB;AACvBrB,IAAAA,IAAI,EAAET,SAAS,CAAC4B,IAAV,CAAeC;AADE,GAAhB,EAENA;AAJe,CAApB;;AAOA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCzB,EAAAA,SAAS,EAAE,MAAMyB,QAAQ,CAAC9B,WAAW,EAAZ;AADe,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAO8B,kBAAP,CAAP,CAAkC5B,OAAlC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { resetAction } from '../redux/actions';\n\nclass Ranking extends React.Component {\n  sairDoJogo = () => {\n    const { history, resetGame } = this.props;\n    resetGame();\n    history.push('/');\n  };\n\n  getRanking = () => {\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n    return ranking || [];\n  }\n\n  sortedRanking = () => {\n    const ranking = this.getRanking();\n    ranking.sort((a, b) => b.score - a.score);\n    return ranking;\n  }\n\n  render() {\n    const ranking = this.sortedRanking();\n\n    return (\n      <div>\n        <div>\n          <h1 data-testid=\"ranking-title\">Ranking</h1>\n          <button\n            type=\"button\"\n            data-testid=\"btn-go-home\"\n            onClick={ () => this.sairDoJogo() }\n          >\n            Sair do Jogo\n          </button>\n        </div>\n        <div>\n          <ol>\n            { ranking.map((player, index) => (\n              <li key={ index }>\n                <img src={ player.picture } alt={ player.name } />\n                <span data-testid={ `player-name-${index}` }>\n                  { player.name }\n                </span>\n                <span data-testid={ `player-score-${index}` }>\n                  { player.score }\n                </span>\n              </li>\n            )) }\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  resetGame: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetGame: () => dispatch(resetAction()),\n});\n\nexport default connect(null, mapDispatchToProps)(Ranking);\n"]},"metadata":{},"sourceType":"module"}
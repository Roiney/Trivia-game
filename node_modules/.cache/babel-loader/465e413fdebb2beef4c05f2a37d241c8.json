{"ast":null,"code":"var _jsxFileName = \"/home/roiney/work/trybe-projetos/sd-021-a-project-trivia-react-redux/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loginAction } from '../redux/actions';\nimport './Login.css';\nimport logo from '../trivia.png';\n\nclass Login extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      nome: '',\n      email: '',\n      isDisable: true\n    };\n\n    this.handleChange = target => {\n      const {\n        id,\n        value\n      } = target;\n      this.setState({\n        [id]: value\n      });\n      this.isDisabled();\n    };\n\n    this.isDisabled = () => {\n      const {\n        nome,\n        email\n      } = this.state;\n\n      if (nome.length >= 1 && email.length >= 1) {\n        this.setState({\n          isDisable: false\n        });\n      } else {\n        this.setState({\n          isDisable: true\n        });\n      }\n    };\n\n    this.requestTrivia = async () => {\n      const {\n        history\n      } = this.props;\n      const response = await fetch('https://opentdb.com/api_token.php?command=request');\n      const token = await response.json();\n      localStorage.setItem('token', token.token);\n      history.push('/game');\n    };\n\n    this.requestPageSettings = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/settings');\n    };\n\n    this.submitForm = () => {\n      const {\n        nome,\n        email\n      } = this.state;\n      const {\n        playGame\n      } = this.props;\n      playGame({\n        nome,\n        email\n      });\n      this.requestTrivia();\n    };\n  }\n\n  render() {\n    const {\n      nome,\n      email,\n      isDisable\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"nome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Nome:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"nome\",\n      \"data-testid\": \"input-player-name\",\n      value: nome,\n      onChange: event => this.handleChange(event.target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Email:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      value: email,\n      onChange: event => this.handleChange(event.target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"Login-play\",\n      \"data-testid\": \"btn-play\",\n      disabled: isDisable,\n      onClick: () => this.submitForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Play\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-settings\",\n      onClick: () => this.requestPageSettings(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Configura\\xE7\\xF5es\")))));\n  }\n\n}\n\nLogin.propTypes = {\n  playGame: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  playGame: login => dispatch(loginAction(login))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/roiney/work/trybe-projetos/sd-021-a-project-trivia-react-redux/src/pages/Login.js"],"names":["React","connect","PropTypes","loginAction","logo","Login","Component","state","nome","email","isDisable","handleChange","target","id","value","setState","isDisabled","length","requestTrivia","history","props","response","fetch","token","json","localStorage","setItem","push","requestPageSettings","submitForm","playGame","render","event","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch","login"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loginAction } from '../redux/actions';\nimport './Login.css';\nimport logo from '../trivia.png';\n\nclass Login extends React.Component {\n  state = {\n    nome: '',\n    email: '',\n    isDisable: true,\n  };\n\n  handleChange = (target) => {\n    const { id, value } = target;\n    this.setState({\n      [id]: value,\n    });\n    this.isDisabled();\n  };\n\n  isDisabled = () => {\n    const { nome, email } = this.state;\n    if (nome.length >= 1 && email.length >= 1) {\n      this.setState({\n        isDisable: false,\n      });\n    } else {\n      this.setState({\n        isDisable: true,\n      });\n    }\n  };\n\n  requestTrivia = async () => {\n    const { history } = this.props;\n    const response = await fetch(\n      'https://opentdb.com/api_token.php?command=request',\n    );\n    const token = await response.json();\n    localStorage.setItem('token', token.token);\n    history.push('/game');\n  };\n\n  requestPageSettings = () => {\n    const { history } = this.props;\n    history.push('/settings');\n  };\n\n  submitForm = () => {\n    const { nome, email } = this.state;\n    const { playGame } = this.props;\n    playGame({ nome, email });\n    this.requestTrivia();\n  };\n\n  render() {\n    const { nome, email, isDisable } = this.state;\n\n    return (\n      <div className=\"App-header\">\n        <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n        <form>\n          <div className=\"Login-container\">\n            <label htmlFor=\"nome\">\n              Nome:\n              <input\n                type=\"text\"\n                id=\"nome\"\n                data-testid=\"input-player-name\"\n                value={ nome }\n                onChange={ (event) => this.handleChange(event.target) }\n              />\n            </label>\n          </div>\n          <div className=\"Login-container\">\n            <label htmlFor=\"email\">\n              Email:\n              <input\n                type=\"text\"\n                id=\"email\"\n                data-testid=\"input-gravatar-email\"\n                value={ email }\n                onChange={ (event) => this.handleChange(event.target) }\n              />\n            </label>\n          </div>\n          <div className=\"buttons-container\">\n            <button\n              type=\"button\"\n              className=\"Login-play\"\n              data-testid=\"btn-play\"\n              disabled={ isDisable }\n              onClick={ () => this.submitForm() }\n            >\n              Play\n            </button>\n            <div className='footer-1'>\n              <button\n                type=\"button\"\n                data-testid=\"btn-settings\"\n                onClick={ () => this.requestPageSettings() }\n              >\n                Configurações\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  playGame: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  playGame: (login) => dispatch(loginAction(login)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/roiney/work/trybe-projetos/sd-021-a-project-trivia-react-redux/src/components/Timer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { disableOptions } from '../redux/actions';\nlet myInterval = null;\n\nclass Timer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      secondsLeft: 30\n    };\n\n    this.componentDidMount = () => {\n      const oneSecond = 1000;\n      myInterval = setInterval(() => this.setState(prevState => ({\n        secondsLeft: prevState.secondsLeft - 1\n      })), oneSecond);\n    };\n\n    this.setStateAfterUpdate = () => {\n      const {\n        secondsLeft\n      } = this.state;\n      const {\n        timer\n      } = this.props;\n      timer(secondsLeft);\n    };\n\n    this.componentDidUpdate = (prevProps, previousState) => {\n      const {\n        stopTimer\n      } = this.props;\n      const {\n        secondsLeft\n      } = previousState;\n\n      if (secondsLeft === 1 || stopTimer) {\n        clearInterval(myInterval);\n        this.setStateAfterUpdate();\n      }\n    };\n\n    this.componentWillUnmount = () => {\n      this.setState({\n        secondsLeft: 30\n      });\n    };\n  }\n\n  render() {\n    const {\n      secondsLeft\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, secondsLeft, \"segundos\");\n  }\n\n}\n\nTimer.propTypes = {\n  timer: PropTypes.func.isRequired,\n  stopTimer: PropTypes.bool.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  timer: seconds => dispatch(disableOptions(seconds))\n});\n\nexport default connect(null, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/roiney/work/trybe-projetos/sd-021-a-project-trivia-react-redux/src/components/Timer.js"],"names":["React","connect","PropTypes","disableOptions","myInterval","Timer","Component","state","secondsLeft","componentDidMount","oneSecond","setInterval","setState","prevState","setStateAfterUpdate","timer","props","componentDidUpdate","prevProps","previousState","stopTimer","clearInterval","componentWillUnmount","render","propTypes","func","isRequired","bool","mapDispatchToProps","dispatch","seconds"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,IAAIC,UAAU,GAAG,IAAjB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,WAAW,EAAE;AADP,KAD0B;;AAAA,SAKlCC,iBALkC,GAKd,MAAM;AACxB,YAAMC,SAAS,GAAG,IAAlB;AACAN,MAAAA,UAAU,GAAGO,WAAW,CACtB,MAAM,KAAKC,QAAL,CAAeC,SAAD,KAAgB;AAAEL,QAAAA,WAAW,EAAEK,SAAS,CAACL,WAAV,GAAwB;AAAvC,OAAhB,CAAd,CADgB,EAEtBE,SAFsB,CAAxB;AAID,KAXiC;;AAAA,SAalCI,mBAbkC,GAaZ,MAAM;AAC1B,YAAM;AAAEN,QAAAA;AAAF,UAAkB,KAAKD,KAA7B;AACA,YAAM;AAAEQ,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACAD,MAAAA,KAAK,CAACP,WAAD,CAAL;AACD,KAjBiC;;AAAA,SAmBlCS,kBAnBkC,GAmBb,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACjD,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKJ,KAA3B;AACA,YAAM;AAAER,QAAAA;AAAF,UAAkBW,aAAxB;;AACA,UAAIX,WAAW,KAAK,CAAhB,IAAqBY,SAAzB,EAAoC;AAClCC,QAAAA,aAAa,CAACjB,UAAD,CAAb;AACA,aAAKU,mBAAL;AACD;AACF,KA1BiC;;AAAA,SA4BlCQ,oBA5BkC,GA4BX,MAAM;AAC3B,WAAKV,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KA9BiC;AAAA;;AAgClCe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,WADJ,aADF;AAMD;;AAzCiC;;AA4CpCH,KAAK,CAACmB,SAAN,GAAkB;AAChBT,EAAAA,KAAK,EAAEb,SAAS,CAACuB,IAAV,CAAeC,UADN;AAEhBN,EAAAA,SAAS,EAAElB,SAAS,CAACyB,IAAV,CAAeD;AAFV,CAAlB;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCd,EAAAA,KAAK,EAAGe,OAAD,IAAaD,QAAQ,CAAC1B,cAAc,CAAC2B,OAAD,CAAf;AADY,CAAf,CAA3B;;AAIA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCvB,KAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { disableOptions } from '../redux/actions';\n\nlet myInterval = null;\n\nclass Timer extends React.Component {\n  state = {\n    secondsLeft: 30,\n  }\n\n  componentDidMount = () => {\n    const oneSecond = 1000;\n    myInterval = setInterval(\n      () => this.setState((prevState) => ({ secondsLeft: prevState.secondsLeft - 1 })),\n      oneSecond,\n    );\n  }\n\n  setStateAfterUpdate = () => {\n    const { secondsLeft } = this.state;\n    const { timer } = this.props;\n    timer(secondsLeft);\n  }\n\n  componentDidUpdate = (prevProps, previousState) => {\n    const { stopTimer } = this.props;\n    const { secondsLeft } = previousState;\n    if (secondsLeft === 1 || stopTimer) {\n      clearInterval(myInterval);\n      this.setStateAfterUpdate();\n    }\n  }\n\n  componentWillUnmount = () => {\n    this.setState({ secondsLeft: 30 });\n  }\n\n  render() {\n    const { secondsLeft } = this.state;\n\n    return (\n      <h2>\n        { secondsLeft }\n        segundos\n      </h2>\n    );\n  }\n}\n\nTimer.propTypes = {\n  timer: PropTypes.func.isRequired,\n  stopTimer: PropTypes.bool.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  timer: (seconds) => dispatch(disableOptions(seconds)),\n});\n\nexport default connect(null, mapDispatchToProps)(Timer);\n"]},"metadata":{},"sourceType":"module"}
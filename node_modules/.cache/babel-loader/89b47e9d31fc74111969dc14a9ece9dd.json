{"ast":null,"code":"var _jsxFileName = \"/home/roiney/work/trybe-projetos/sd-021-a-project-trivia-react-redux/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loginAction } from '../redux/actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      nome: '',\n      email: '',\n      isDisable: true\n    };\n\n    this.handleChange = target => {\n      const {\n        id,\n        value\n      } = target;\n      this.setState({\n        [id]: value\n      });\n      this.isDisabled();\n    };\n\n    this.isDisabled = () => {\n      const {\n        nome,\n        email\n      } = this.state;\n\n      if (nome.length >= 1 && email.length >= 1) {\n        this.setState({\n          isDisable: false\n        });\n      } else {\n        this.setState({\n          isDisable: true\n        });\n      }\n    };\n\n    this.requestTrivia = async () => {\n      const {\n        history\n      } = this.props;\n      const response = await fetch('https://opentdb.com/api_token.php?command=request');\n      const token = await response.json();\n      console.log(token.token);\n      localStorage.setItem('token', token.token);\n      history.push('/game');\n    };\n\n    this.requestPageSettings = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/settings');\n    };\n\n    this.submitForm = () => {\n      const {\n        nome,\n        email\n      } = this.state;\n      const {\n        playGame\n      } = this.props;\n      playGame({\n        nome,\n        email\n      });\n      this.requestTrivia();\n    };\n  }\n\n  render() {\n    const {\n      nome,\n      email,\n      isDisable\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"nome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Nome:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"nome\",\n      \"data-testid\": \"input-player-name\",\n      value: nome,\n      onChange: event => this.handleChange(event.target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Email:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      value: email,\n      onChange: event => this.handleChange(event.target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play\",\n      disabled: isDisable,\n      onClick: () => this.submitForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Play\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-settings\",\n      onClick: () => this.requestPageSettings(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Configura\\xE7\\xF5es\")));\n  }\n\n}\n\nLogin.propTypes = {\n  playGame: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  playGame: login => dispatch(loginAction(login))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/roiney/work/trybe-projetos/sd-021-a-project-trivia-react-redux/src/pages/Login.js"],"names":["React","connect","PropTypes","loginAction","Login","Component","state","nome","email","isDisable","handleChange","target","id","value","setState","isDisabled","length","requestTrivia","history","props","response","fetch","token","json","console","log","localStorage","setItem","push","requestPageSettings","submitForm","playGame","render","event","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch","login"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loginAction } from '../redux/actions';\n\nclass Login extends React.Component {\n  state = {\n    nome: '',\n    email: '',\n    isDisable: true,\n  }\n\n  handleChange = (target) => {\n    const { id, value } = target;\n    this.setState({\n      [id]: value,\n    });\n    this.isDisabled();\n  };\n\n  isDisabled = () => {\n    const { nome, email } = this.state;\n    if (nome.length >= 1 && email.length >= 1) {\n      this.setState({\n        isDisable: false,\n      });\n    } else {\n      this.setState({\n        isDisable: true,\n      });\n    }\n  };\n\n  requestTrivia = async () => {\n    const { history } = this.props;\n    const response = await fetch(\n      'https://opentdb.com/api_token.php?command=request',\n    );\n    const token = await response.json();\n    console.log(token.token);\n    localStorage.setItem('token', token.token);\n    history.push('/game');\n  };\n\n  requestPageSettings = () => {\n    const { history } = this.props;\n    history.push('/settings');\n  };\n\n  submitForm = () => {\n    const { nome, email } = this.state;\n    const { playGame } = this.props;\n    playGame({ nome, email });\n    this.requestTrivia();\n  };\n\n  render() {\n    const { nome, email, isDisable } = this.state;\n\n    return (\n      <form>\n        <div>\n          <label htmlFor=\"nome\">\n            Nome:\n            <input\n              type=\"text\"\n              id=\"nome\"\n              data-testid=\"input-player-name\"\n              value={ nome }\n              onChange={ (event) => this.handleChange(event.target) }\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"email\">\n            Email:\n            <input\n              type=\"text\"\n              id=\"email\"\n              data-testid=\"input-gravatar-email\"\n              value={ email }\n              onChange={ (event) => this.handleChange(event.target) }\n            />\n          </label>\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            data-testid=\"btn-play\"\n            disabled={ isDisable }\n            onClick={ () => this.submitForm() }\n          >\n            Play\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"btn-settings\"\n            onClick={ () => this.requestPageSettings() }\n          >\n            Configurações\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nLogin.propTypes = {\n  playGame: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  playGame: (login) => dispatch(loginAction(login)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}